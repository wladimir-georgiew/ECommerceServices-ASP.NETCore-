@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

@using FastServices.Common

<style>
    ul {
        list-style-type: none;
    }
</style>

<h4>@ViewData["Title"]</h4>
<partial name="_StatusMessage" model="Model.StatusMessage" />

<form enctype="multipart/form-data" id="profile-form" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <div class="form-group">
            <label asp-for="@Model.Input.ImageFile" class="control-label"></label>
            <div class="custom-file">
                <input asp-for="@Model.Input.ImageFile" class="custom-file-input" id="customFile">
                <label class="custom-file-label" for="customFile">Choose file</label>
                <span asp-validation-for="Input.ImageFile" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Username"></label>
        <input asp-for="Username" class="form-control" disabled />
    </div>
    <div class="form-group">
        <label asp-for="Input.PhoneNumber"></label>
        <input value="@Model.Input.PhoneNumber" asp-for="Input.PhoneNumber" class="form-control" />
        <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
    </div>

    @if (this.User.IsInRole(GlobalConstants.EmployeeRoleName))
    {
        <partial name="~/Areas/Administration/Views/_EmployeeSalary.cshtml"/>
    }

    <button id="update-profile-button" type="submit" class="btn btn-primary">Save</button>
</form>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        // Add the following code if you want the name of the file appear on select
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
    </script>
}